---
- name: Install and configure Docker
  hosts: all
  become: yes
  vars:
    user_to_add: "root"  # Substitua por outro usuário, se necessário
  tasks:
    - name: Wait for a random time to avoid apt lock
      wait_for:
        timeout: "{{ 5 + 5|random }}"

    - name: Ensure previous apt processes are terminated
      shell: |
        while fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 1; done
        while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do sleep 1; done
        while fuser /var/lib/apt/lists/lock >/dev/null 2>&1; do sleep 1; done
        if pgrep -a apt; then
          kill -9 $(pgrep apt)
        fi
      retries: 10
      delay: 5

    - name: Ensure apt-get is not running
      shell: |
        pgrep -x apt && killall -9 apt || true
      retries: 10
      delay: 5

    - name: Clean up apt locks
      shell: |
        rm -rf /var/lib/dpkg/lock
        rm -rf /var/lib/dpkg/lock-frontend
        rm -rf /var/lib/apt/lists/lock
      ignore_errors: true

    - name: Update apt cache using shell
      shell: apt-get update
      register: update_result
      retries: 5
      delay: 15
      until: update_result.rc == 0
      ignore_errors: true

    - name: Ensure required packages are installed
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt cache after adding Docker repo
      apt:
        update_cache: yes

    - name: Install Docker
      apt:
        name: docker-ce
        state: present

    - name: Add user to docker group
      user:
        name: "{{ user_to_add }}"
        groups: docker
        append: yes

    - name: Set iptables to legacy
      shell: |
        update-alternatives --set iptables /usr/sbin/iptables-legacy
        update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy

    - name: Fix ulimit in Docker init script
      lineinfile:
        path: /etc/init.d/docker
        regexp: 'ulimit -Hn'
        line: 'ulimit -n 524288'

    - name: Enable and start Docker service using service command
      shell: |
        service docker start
      register: docker_service_result
      retries: 5
      delay: 15
      until: docker_service_result.rc == 0
      ignore_errors: true

    - name: Ensure Docker service is running
      shell: |
        service docker status
      register: docker_status_result
      retries: 5
      delay: 15
      until: docker_status_result.rc == 0
      ignore_errors: true
